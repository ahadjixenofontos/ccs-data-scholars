# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(exif_cmd,  path,  sep='')
print(cmd)
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
exif_timestamp
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
library(leaflet)  # for generating interactive Javascript maps
library(rgdal)    # GDAL bindings for loading GPX-data
library(sp)       # spatial operations library
library(lubridate)# datetime-operatings, here to convert from strings
library(rgdal)    # GDAL bindings for loading GPX-data
library(lubridate)# datetime-operatings, here to convert from strings
library(ggplot2)  # general plotting library
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(exif_cmd,  path,  sep='')
print(cmd)
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
exif_timestamp
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- shell(paste(exif_cmd,  path,  sep=''),intern=T)
print(cmd)
exif_timestamp <- cmd # execute exiftool-command
exif_timestamp
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(exif_cmd,  path,  sep='')
print(cmd)
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
exif_timestamp
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
print(cmd)
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
exif_timestamp
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
}
photo_info <- exif_info('C:\\Research\\dataScholar\\dataScholar\\photos\\1.JPG')
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
print(picInfo)
}
})
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
numPic=length(picInfo)
library(leaflet)  # for generating interactive Javascript maps
library(sp)       # spatial operations library
library(rgdal)    # GDAL bindings for loading GPX-data
library(lubridate)# datetime-operatings, here to convert from strings
library(ggplot2)  # general plotting library
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
print('Ready!')
numPic=length(picInfo)
numPic=length(picInfo)
picNames=character(numPic)
lati=c(numPic)
longi=c(numPic)
for(i in 1:numPic){
picName=ls(picInfo)[i]
picNames[i]=picName
lati[i]=as.numeric(picInfo[picName][[1]][1])
#print(as.numeric(picInfo[picName][[1]][1]))
longi[i]=as.numeric(picInfo[picName][[1]][2])
}
m <- leaflet() %>%
addTiles() %>%
setView(-80.2711, 25.7192, zoom = 16) %>%
addMarkers(lng=longi, lat=lati, popup=paste0("<b>",picNames,"</b><br><img height='120px' width='160px' src='http://ghchen.com/photos/",picNames,".JPG' />"))
m
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
numPic=length(picInfo)
picNames=character(numPic)
lati=c(numPic)
longi=c(numPic)
for(i in 1:numPic){
picName=ls(picInfo)[i]
picNames[i]=picName
lati[i]=as.numeric(picInfo[picName][[1]][1])
#print(as.numeric(picInfo[picName][[1]][1]))
longi[i]=as.numeric(picInfo[picName][[1]][2])
}
m <- leaflet() %>%
addTiles() %>%
setView(-80.2711, 25.7192, zoom = 16) %>%
addMarkers(lng=longi, lat=lati, popup=paste0("<b>",picNames,"</b><br><img height='120px' width='160px' src='http://ghchen.com/photos/",picNames,".JPG' />"))
m
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
numPic=length(picInfo)
picNames=character(numPic)
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
library(leaflet)  # for generating interactive Javascript maps
library(sp)       # spatial operations library
library(rgdal)    # GDAL bindings for loading GPX-data
library(lubridate)# datetime-operatings, here to convert from strings
library(ggplot2)  # general plotting library
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_timestamp <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
numPic=length(picInfo)
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
#print(picName)
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
#print(picInfo)
}
})
library(leaflet)  # for generating interactive Javascript maps
library(sp)       # spatial operations library
library(rgdal)    # GDAL bindings for loading GPX-data
library(lubridate)# datetime-operatings, here to convert from strings
library(ggplot2)  # general plotting library
exif_info <- function(path) {
# read out the picture-taken datetime for a file using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
working_directory<-'C:\\Research\\dataScholar\\dataScholar\\'
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path="C:\\Research\\dataScholar\\dataScholar\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
library(leaflet)  # for generating interactive Javascript maps
library(sp)       # spatial operations library
library(rgdal)    # GDAL bindings for loading GPX-data
library(lubridate)# datetime-operatings, here to convert from strings
library(ggplot2)  # general plotting library
working_directory<-'C:\\Research\\ccs-data-scholars\\geospatial_project\\'
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path=working_directory+"photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
numPic=length(picInfo)
picNames=character(numPic)
lati=c(numPic)
longi=c(numPic)
for(i in 1:numPic){
picName=ls(picInfo)[i]
picNames[i]=picName
lati[i]=as.numeric(picInfo[picName][[1]][1])
longi[i]=as.numeric(picInfo[picName][[1]][2])
}
m <- leaflet() %>%
addTiles() %>%
setView(-80.2711, 25.7192, zoom = 16) %>%
addMarkers(lng=longi, lat=lati, popup=paste0("<b>",picNames,"</b><br><img height='120px' width='160px' src='http://ghchen.com/photos/",picNames,".JPG' />"))
m
setwd('C:\\Research\\ccs-data-scholars\\geospatial_project\\')
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files("\\photos", pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
files <- list.files("/photos", pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files("\\photos\\", pattern="*.JPG", full.names=T, recursive=FALSE)
working_directory<-'C:\\Research\\ccs-data-scholars\\geospatial_project\\'
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path=paste(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=working_directory+"photos", pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=working_directory+"photos", pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=past(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=past(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=paste(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
files <- list.files(path=paste0(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
working_directory<-'C:\\Research\\ccs-data-scholars\\geospatial_project\\'
exif_info <- function(path) {
# read out the gps of a picture using exiftool
#exif_cmd <- 'exiftool(-k) -GPSPosition '
exif_cmd <- 'exiftool(-k) -n -csv '
cmd <- paste(working_directory,exif_cmd,  path,  sep='')
exif_gps <- system(cmd, intern = TRUE) # execute exiftool-command
}
files <- list.files(path=paste0(working_directory,"photos"), pattern="*.JPG", full.names=T, recursive=FALSE)
numPic=length(files)
picInfo=list()
lapply(files, function(x) {
picName=strsplit(x,'/')[[1]][2]
picName=strsplit(picName,'[.]')[[1]][1]
photo_info <- exif_info(x)
df <- read.csv(textConnection(photo_info), stringsAsFactors = FALSE)
if("GPSPosition" %in% colnames(df))
{
latAndLong=df['GPSPosition']
picInfo[[picName]]<<-list(as.numeric(strsplit(latAndLong[[1]],' ')[[1]][1]),as.numeric(strsplit(latAndLong[[i]],' ')[[1]][2]))
}
})
